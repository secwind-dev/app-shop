/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProtectedRouteImport } from './routes/_protected'
import { Route as GuestRouteImport } from './routes/_guest'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProtectedDashboardRouteImport } from './routes/_protected/dashboard'
import { Route as GuestRegisterRouteImport } from './routes/_guest/register'
import { Route as GuestLoginRouteImport } from './routes/_guest/login'
import { Route as ProtectedProductListRouteImport } from './routes/_protected/product/list'
import { Route as ProtectedProductCreateRouteImport } from './routes/_protected/product/create'

const ProtectedRoute = ProtectedRouteImport.update({
  id: '/_protected',
  getParentRoute: () => rootRouteImport,
} as any)
const GuestRoute = GuestRouteImport.update({
  id: '/_guest',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedDashboardRoute = ProtectedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => ProtectedRoute,
} as any)
const GuestRegisterRoute = GuestRegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => GuestRoute,
} as any)
const GuestLoginRoute = GuestLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => GuestRoute,
} as any)
const ProtectedProductListRoute = ProtectedProductListRouteImport.update({
  id: '/product/list',
  path: '/product/list',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedProductCreateRoute = ProtectedProductCreateRouteImport.update({
  id: '/product/create',
  path: '/product/create',
  getParentRoute: () => ProtectedRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof GuestLoginRoute
  '/register': typeof GuestRegisterRoute
  '/dashboard': typeof ProtectedDashboardRoute
  '/product/create': typeof ProtectedProductCreateRoute
  '/product/list': typeof ProtectedProductListRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof GuestLoginRoute
  '/register': typeof GuestRegisterRoute
  '/dashboard': typeof ProtectedDashboardRoute
  '/product/create': typeof ProtectedProductCreateRoute
  '/product/list': typeof ProtectedProductListRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_guest': typeof GuestRouteWithChildren
  '/_protected': typeof ProtectedRouteWithChildren
  '/_guest/login': typeof GuestLoginRoute
  '/_guest/register': typeof GuestRegisterRoute
  '/_protected/dashboard': typeof ProtectedDashboardRoute
  '/_protected/product/create': typeof ProtectedProductCreateRoute
  '/_protected/product/list': typeof ProtectedProductListRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/register'
    | '/dashboard'
    | '/product/create'
    | '/product/list'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/register'
    | '/dashboard'
    | '/product/create'
    | '/product/list'
  id:
    | '__root__'
    | '/'
    | '/_guest'
    | '/_protected'
    | '/_guest/login'
    | '/_guest/register'
    | '/_protected/dashboard'
    | '/_protected/product/create'
    | '/_protected/product/list'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  GuestRoute: typeof GuestRouteWithChildren
  ProtectedRoute: typeof ProtectedRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_guest': {
      id: '/_guest'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof GuestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected/dashboard': {
      id: '/_protected/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof ProtectedDashboardRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_guest/register': {
      id: '/_guest/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof GuestRegisterRouteImport
      parentRoute: typeof GuestRoute
    }
    '/_guest/login': {
      id: '/_guest/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof GuestLoginRouteImport
      parentRoute: typeof GuestRoute
    }
    '/_protected/product/list': {
      id: '/_protected/product/list'
      path: '/product/list'
      fullPath: '/product/list'
      preLoaderRoute: typeof ProtectedProductListRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/product/create': {
      id: '/_protected/product/create'
      path: '/product/create'
      fullPath: '/product/create'
      preLoaderRoute: typeof ProtectedProductCreateRouteImport
      parentRoute: typeof ProtectedRoute
    }
  }
}

interface GuestRouteChildren {
  GuestLoginRoute: typeof GuestLoginRoute
  GuestRegisterRoute: typeof GuestRegisterRoute
}

const GuestRouteChildren: GuestRouteChildren = {
  GuestLoginRoute: GuestLoginRoute,
  GuestRegisterRoute: GuestRegisterRoute,
}

const GuestRouteWithChildren = GuestRoute._addFileChildren(GuestRouteChildren)

interface ProtectedRouteChildren {
  ProtectedDashboardRoute: typeof ProtectedDashboardRoute
  ProtectedProductCreateRoute: typeof ProtectedProductCreateRoute
  ProtectedProductListRoute: typeof ProtectedProductListRoute
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedDashboardRoute: ProtectedDashboardRoute,
  ProtectedProductCreateRoute: ProtectedProductCreateRoute,
  ProtectedProductListRoute: ProtectedProductListRoute,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  GuestRoute: GuestRouteWithChildren,
  ProtectedRoute: ProtectedRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
